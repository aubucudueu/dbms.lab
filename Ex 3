3. a. Query the Database with WHERE Clauses and Aggregate Functions
Using WHERE Clause Conditions:
SELECT * FROM Employee WHERE Salary > 60000;
 SELECT * FROM Employee WHERE ManagerId = 1;
 SELECT * FROM Employee WHERE Name LIKE 'A%';
Using Aggregate Functions:
SELECT COUNT(*) AS TotalEmployeesFROM Employee;
 SELECT AVG(Salary) AS AverageSalaryFROM Employee;
 SELECT MAX(Salary) AS MaxSalary, MIN(Salary) AS MinSalaryFROM Employee;
 SELECT SUM(Salary) AS TotalSalariesFROM Employee;


3. b. Find the Second Highest Distinct Salary
To find the second highest distinct salary:
SELECT MAX(Salary) AS SecondHighestSalary FROM Employee WHERE Salary < (SELECT MAX(Salary) FROM Employee);

3. c. Find the nth Highest Salary
To find the nth highest salary, you can use a window function or a procedural method. Hereâ€™s a general solution using window functions:
WITH RankedSalaries AS (
    SELECT Salary, 
           DENSE_RANK() OVER (ORDER BY Salary DESC) AS Rank
    FROM Employee
)
SELECT Salary AS NthHighestSalary
FROM RankedSalaries
WHERE Rank = 3;
Dynamic nth Highest Salary Using a Function (SQL Server):
CREATE FUNCTION GetNthHighestSalary(@N INT)
RETURNS TABLE
AS
RETURN (
    SELECT Salary
    FROM (
        SELECT Salary, 
               DENSE_RANK() OVER (ORDER BY Salary DESC) AS Rank
        FROM Employee
    ) RankedSalaries
    WHERE Rank = @N
);
Usage:
SELECT * FROM GetNthHighestSalary(3); 
